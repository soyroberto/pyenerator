import string
import sys
import random
import argparse

def generar_cadena_aleatoria(longitud, incluir_numeros=True, incluir_simbolos=True, incluir_especiales=True):
    """
    Genera una cadena aleatoria con opciones para incluir diferentes tipos de caracteres.
    
    Args:
        longitud (int): Longitud de la contrase침a
        incluir_numeros (bool): Si incluir n칰meros (0-9)
        incluir_simbolos (bool): Si incluir s칤mbolos de puntuaci칩n
        incluir_especiales (bool): Si incluir caracteres especiales
    
    Returns:
        str: Contrase침a generada
    """
    # Siempre incluir letras (min칰sculas y may칰sculas)
    caracteres_posibles = string.ascii_letters
    
    # Agregar n칰meros si se solicita
    if incluir_numeros:
        caracteres_posibles += string.digits
    
    # Agregar s칤mbolos si se solicita
    if incluir_simbolos:
        caracteres_posibles += "!@#$%^&*-_=+"
    
    # Agregar caracteres especiales si se solicita
    if incluir_especiales:
        caracteres_posibles += "()[]{}|\\:;<>,.?/~"
    
    # Verificar que tenemos al menos algunos caracteres para usar
    if not caracteres_posibles:
        caracteres_posibles = string.ascii_letters  # Fallback a solo letras
    
    # Generar la contrase침a
    cadena_aleatoria = ''.join(random.choice(caracteres_posibles) for _ in range(longitud))
    
    return cadena_aleatoria

def main():
    parser = argparse.ArgumentParser(description='Generador de contrase침as con opciones personalizables')
    parser.add_argument('longitud', type=int, help='Longitud de la contrase침a')
    parser.add_argument('--no-numeros', '--non', action='store_true', help='Excluir n칰meros de la contrase침a')
    parser.add_argument('--no-simbolos', '--nos', action='store_true', help='Excluir s칤mbolos de la contrase침a')
    parser.add_argument('--no-especiales', '--noe', action='store_true', help='Excluir caracteres especiales de la contrase침a')
    
    args = parser.parse_args()
    
    # Verificar longitud m칤nima
    if args.longitud < 4:
        print(f"Longitud m칤nima es 4, usando 13 en su lugar")
        args.longitud = 13
    
    # Determinar qu칠 tipos de caracteres incluir
    incluir_numeros = not args.no_numeros
    incluir_simbolos = not args.no_simbolos
    incluir_especiales = not args.no_especiales
    
    # Generar la contrase침a
    cadena_aleatoria = generar_cadena_aleatoria(
        args.longitud, 
        incluir_numeros, 
        incluir_simbolos, 
        incluir_especiales
    )
    
    # Mostrar informaci칩n sobre los tipos de caracteres incluidos
    tipos_incluidos = []
    if incluir_numeros:
        tipos_incluidos.append("n칰meros")
    if incluir_simbolos:
        tipos_incluidos.append("s칤mbolos")
    if incluir_especiales:
        tipos_incluidos.append("especiales")
    
    print(f"passwd 游댏: {cadena_aleatoria}")
    print(f"Longitud: {len(cadena_aleatoria)}")
    print(f"Tipos incluidos: {', '.join(tipos_incluidos) if tipos_incluidos else 'solo letras'}")

if __name__ == "__main__":
    main()

